@using Nemesys.Models
@using Nemesys.Models.ViewModels
@model ReportPostListViewModel
@inject SignInManager<AppUser> SignInManager
@{
    ViewData["Title"] = "Report Posts";
}
<h1>@ViewData["Title"]</h1>

<h2>Showing @Model.TotalEntries blog entries</h2>
<div class="row">
    @foreach (var Report in Model.ReportPosts)
    {
        <div class="card" style="width: 18rem;padding:20px; margin:20px;">
            @if (!string.IsNullOrEmpty(Report.ImageUrl))
            {
                <img class="card-img-top" src="@Report.ImageUrl" alt="Image for @Report.Title" />
            }
            <div class="card-body">
                <h3 class="card-title">@Report.Title</h3>
                <p class="small">@Report.CreatedDate.ToShortDateString() in @Report.Category.Name by @Report.Author.Name</p>

                <a asp-controller="ReportPosts" asp-action="Details" asp-route-id="@Report.Id" class="btn btn-primary">Details</a>

                <form asp-controller="ReportPosts" asp-action="ToggleUpvote" method="post">
                    <input type="hidden" name="reportPostId" value="@Report.Id" />
                    <input type="hidden" name="returnUrl" value="@Url.Action("Index", "ReportPosts")" />
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <button type="submit" class="btn btn-sm btn-outline-primary" onclick="handleUpvote(@Report.Id)">
                            👍 <span class="upvote-count">@Report.UpvoteCount</span>
                        </button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="handleUpvote(@Report.Id)">
                            👍 <span class="upvote-count">@Report.UpvoteCount</span>
                        </button>
                    }


                </form>

                


            </div>
        </div>
    }

</div>

@section Scripts {
    <script>
        function handleUpvote(reportId) {
            const userIsAuthenticated = @SignInManager.IsSignedIn(User).ToString().ToLower();

            if (!userIsAuthenticated) {
                window.location.href = '@Url.Action("Register", "Account", new { area = "Identity" })';


                return;
            }
        }
    </script>
            }